apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argo-rollouts-dashboard-ingress
  namespace: argo-rollouts
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  ingressClassName: nginx
  rules:
  - host: rollouts.example.com  # Replace with your domain
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: argo-rollouts-dashboard
            port:
              number: 3100
  # Uncomment if you have TLS certificates
  # tls:
  # - hosts:
  #   - rollouts.example.com
  #   secretName: rollouts-tls-secret
---
apiVersion: v1
kind: Service
metadata:
  name: argo-rollouts-dashboard
  namespace: argo-rollouts
  labels:
    app.kubernetes.io/name: argo-rollouts-dashboard
spec:
  ports:
  - name: dashboard
    port: 3100
    protocol: TCP
    targetPort: 3100
  selector:
    app.kubernetes.io/name: argo-rollouts-dashboard
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argo-rollouts-dashboard
  namespace: argo-rollouts
  labels:
    app.kubernetes.io/name: argo-rollouts-dashboard
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: argo-rollouts-dashboard
  template:
    metadata:
      labels:
        app.kubernetes.io/name: argo-rollouts-dashboard
    spec:
      containers:
      - name: argo-rollouts-dashboard
        image: quay.io/argoproj/kubectl-argo-rollouts:stable
        args:
        - dashboard
        - --port=3100
        ports:
        - containerPort: 3100
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi